[{"body":"Welcome to the Compose theme user guide! This guide shows you how to get started creating technical documentation sites using Compose, including site customization and how to use Compose's blocks and templates.\nGet started now ","link":"https://omnigram.nexptr.com/en/api/example/","section":"api","title":"Compose Docs"},{"body":"The Omnigram Server is the backend service for Omnigram, providing essential functions such as user management, e-book scraping, personal reading progress tracking, and more. It also offers interfaces for using models like LLama and bark to support key functionalities in the background, such as \u0026quot;Quick Thoughts\u0026quot; and \u0026quot;Audiobook.\u0026quot; Of course, users can also customize and utilize third-party services like chatgpt.\nTODO\nBack to docs ","link":"https://omnigram.nexptr.com/en/api/","section":"api","title":"Omnigram-server API Docs"},{"body":"Mermaid is library that helps you generate diagrams, flowcharts, and piecharts from text in a similar manner as markdown.\nWith compose theme, you can use mermaid using a custom shortcode as follows:\nSequence Diagrams Syntax\n1{{\u0026lt; mermaid \u0026gt;}} 2sequenceDiagram 3 participant Alice 4 participant Bob 5 Alice-\u0026gt;\u0026gt;John: Hello John, how are you? 6 loop Healthcheck 7 John-\u0026gt;\u0026gt;John: Fight against hypochondria 8 end 9 Note right of John: Rational thoughts\u0026lt;br/\u0026gt;prevail... 10 John--\u0026gt;\u0026gt;Alice: Great! 11 John-\u0026gt;\u0026gt;Bob: How about you? 12 Bob--\u0026gt;\u0026gt;John: Jolly good! 13{{\u0026lt; /mermaid \u0026gt;}} Result\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughtsprevail... John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! Flow Charts Syntax\n1{{\u0026lt; mermaid \u0026gt;}} 2flowchart TB 3 c1--\u0026gt;a2 4 subgraph one 5 a1--\u0026gt;a2 6 end 7 subgraph two 8 b1--\u0026gt;b2 9 end 10 subgraph three 11 c1--\u0026gt;c2 12 end 13 one --\u0026gt; two 14 three --\u0026gt; two 15 two --\u0026gt; c2 16{{\u0026lt; /mermaid \u0026gt;}} Result\nflowchart TB c1--\u003ea2 subgraph one a1--\u003ea2 end subgraph two b1--\u003eb2 end subgraph three c1--\u003ec2 end one --\u003e two three --\u003e two two --\u003e c2 Graphs Syntax\n1{{\u0026lt; mermaid \u0026gt;}} 2graph TB 3 sq[Square shape] --\u0026gt; ci((Circle shape)) 4 5 subgraph A 6 od\u0026gt;Odd shape]-- Two line\u0026lt;br/\u0026gt;edge comment --\u0026gt; ro 7 di{Diamond with \u0026lt;br/\u0026gt; line break} -.-\u0026gt; ro(Rounded\u0026lt;br\u0026gt;square\u0026lt;br\u0026gt;shape) 8 di==\u0026gt;ro2(Rounded square shape) 9 end 10 11 %% Notice that no text in shape are added here instead that is appended further down 12 e --\u0026gt; od3\u0026gt;Really long text with linebreak\u0026lt;br\u0026gt;in an Odd shape] 13 14 %% Comments after double percent signs 15 e((Inner / circle\u0026lt;br\u0026gt;and some odd \u0026lt;br\u0026gt;special characters)) --\u0026gt; f(,.?!+-*ز) 16 17 cyr[Cyrillic]--\u0026gt;cyr2((Circle shape Начало)); 18 19 classDef green fill:#9f6,stroke:#333,stroke-width:2px; 20 classDef orange fill:#f96,stroke:#333,stroke-width:4px; 21 class sq,e green 22 class di orange 23{{\u0026lt; /mermaid \u0026gt;}} Result\ngraph TB sq[Square shape] --\u003e ci((Circle shape)) subgraph A od\u003eOdd shape]-- Two lineedge comment --\u003e ro di{Diamond with line break} -.-\u003e ro(Rounded\nsquare\nshape) di==\u003ero2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --\u003e od3\u003eReally long text with linebreak\nin an Odd shape] %% Comments after double percent signs e((Inner / circle\nand some odd special characters)) --\u003e f(,.?!+-*ز) cyr[Cyrillic]--\u003ecyr2((Circle shape Начало)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange Syntax\n1{{\u0026lt; mermaid \u0026gt;}} 2graph LR 3 A[Hard edge] --\u0026gt;|Link text| B(Round edge) 4 B --\u0026gt; C{Decision} 5 C --\u0026gt;|One| D[Result one] 6 C --\u0026gt;|Two| E[Result two] 7{{\u0026lt; /mermaid \u0026gt;}} Result\ngraph LR A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Class Diagram classDiagram Animal \u003c|-- Duck Animal \u003c|-- Fish Animal \u003c|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } State Diagram stateDiagram-v2 [*] --\u003e Active state Active { [*] --\u003e NumLockOff NumLockOff --\u003e NumLockOn : EvNumLockPressed NumLockOn --\u003e NumLockOff : EvNumLockPressed -- [*] --\u003e CapsLockOff CapsLockOff --\u003e CapsLockOn : EvCapsLockPressed CapsLockOn --\u003e CapsLockOff : EvCapsLockPressed -- [*] --\u003e ScrollLockOff ScrollLockOff --\u003e ScrollLockOn : EvScrollLockPressed ScrollLockOn --\u003e ScrollLockOff : EvScrollLockPressed } stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u003e State2 note left of State2 : This is the note to the left. Relationship Diagrams Syntax\n1{{\u0026lt; mermaid \u0026gt;}} 2erDiagram 3 CUSTOMER ||--o{ ORDER : places 4 ORDER ||--|{ LINE-ITEM : contains 5 CUSTOMER }|..|{ DELIVERY-ADDRESS : uses 6{{\u0026lt; /mermaid \u0026gt;}} Result\nerDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses User Journey Syntax\n1{{\u0026lt; mermaid \u0026gt;}} 2journey 3 title My working day 4 section Go to work 5 Make tea: 5: Me 6 Go upstairs: 3: Me 7 Do work: 1: Me, Cat 8 section Go home 9 Go downstairs: 5: Me 10 Sit down: 5: Me 11{{\u0026lt; /mermaid \u0026gt;}} Result\njourney title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me Gantt Syntax\n1{{\u0026lt; mermaid \u0026gt;}} 2gantt 3 dateFormat YYYY-MM-DD 4 title Adding GANTT diagram functionality to mermaid 5 excludes weekends 6 %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\u0026#34;sunday\u0026#34;) or \u0026#34;weekends\u0026#34;, but not the word \u0026#34;weekdays\u0026#34;.) 7 8 section A section 9 Completed task :done, des1, 2014-01-06,2014-01-08 10 Active task :active, des2, 2014-01-09, 3d 11 Future task : des3, after des2, 5d 12 Future task2 : des4, after des3, 5d 13 14 section Critical tasks 15 Completed task in the critical line :crit, done, 2014-01-06,24h 16 Implement parser and jison :crit, done, after des1, 2d 17 Create tests for parser :crit, active, 3d 18 Future task in critical line :crit, 5d 19 Create tests for renderer :2d 20 Add to mermaid :1d 21 22 section Documentation 23 Describe gantt syntax :active, a1, after des1, 3d 24 Add gantt diagram to demo page :after a1 , 20h 25 Add another diagram to demo page :doc1, after a1 , 48h 26 27 section Last section 28 Describe gantt syntax :after doc1, 3d 29 Add gantt diagram to demo page :20h 30 Add another diagram to demo page :48h 31{{\u0026lt; /mermaid \u0026gt;}} Result\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h Pie Chart 1{{\u0026lt; mermaid \u0026gt;}} 2pie 3 title Key elements in Product X 4 \u0026#34;Calcium\u0026#34; : 42.96 5 \u0026#34;Potassium\u0026#34; : 50.05 6 \u0026#34;Magnesium\u0026#34; : 10.01 7 \u0026#34;Iron\u0026#34; : 5 8{{\u0026lt; /mermaid \u0026gt;}} Result\npie title Key elements in Product X \"Calcium\" : 42.96 \"Potassium\" : 50.05 \"Magnesium\" : 10.01 \"Iron\" : 5 ","link":"https://omnigram.nexptr.com/en/api/example/mermaid/","section":"api","title":"Mermaid"},{"body":"Hugo Clarity is a technology-minded theme for Hugo based on VMware's open-source Clarity Design System featuring rich code support, dark/light mode, mobile support, and much more. See a live demo at neonmirrors.net.\nGet started with Clarity ","link":"https://omnigram.nexptr.com/en/docs/overview/","section":"docs","title":"Overivew"},{"body":"Prerequisites Firstly, ensure you have installed the extended version of Hugo. See installation steps from Hugo's official docs.\nGetting up and running Read the prerequisites above and verify you're using the extended version of Hugo. There are at least two ways of quickly getting started with Hugo and the VMware Clarity theme:\nOption 1 (recommended) Generate a new Hugo site and add this theme as a Git submodule inside your themes folder:\n1hugo new site yourSiteName 2cd yourSiteName 3git init 4git submodule add https://github.com/chipzoller/hugo-clarity themes/hugo-clarity 5cp -a themes/hugo-clarity/exampleSite/* . Then run\n1hugo server Hurray!\nOption 2 (Great for testing quickly) You can run your site directly from the exampleSite. To do so, use the following commands:\n1git clone https://github.com/chipzoller/hugo-clarity 2cd hugo-clarity/exampleSite/ 3hugo server --themesDir ../.. Although, option 2 is great for quick testing, it is somewhat problematic when you want to update your theme. You would need to be careful not to overwrite your changes.\nOption 3 (The new, most fun \u0026amp; painless approach) This option enables you to load this theme as a hugo module. It arguably requires the least effort to run and maintain in your website.\nFirst things first, ensure you have go binary installed on your machine.\n1git clone https://github.com/chipzoller/hugo-clarity.git clarity 2cd clarity/exampleSite/ 3hugo mod init my-site Open config.toml file in your code editor, replace theme = \u0026quot;hugo-clarity\u0026quot; with theme = [\u0026quot;github.com/chipzoller/hugo-clarity\u0026quot;] or just theme = \u0026quot;github.com/chipzoller/hugo-clarity\u0026quot;.\nHurray you can now run\n1hugo server To pull in theme updates, run hugo mod get -u ./... from the theme folder. If unsure, learn how to update hugo modules\nThere is more you could do with hugo modules, but this will suffice for our use case here.\n","link":"https://omnigram.nexptr.com/en/docs/overview/getting-started/","section":"docs","title":"Getting started"},{"body":" Blog with tagging and category options\nDeeplinks\nNative Image Lazy Loading\nCustomizable (see config)\nDark Mode (with UI controls for user preference setting)\nToggleable table of contents\nFlexible image configuration\nLogo alignment\nMobile support with configurable menu alignment\nSyntax Highlighting\nRich code block functions including:\nCopy to clipboard Toggle line wrap (dynamic) Toggle line numbers Language label Toggle block expansion/contraction (dynamic) To put it all in context, here is a preview showing all functionality.\n","link":"https://omnigram.nexptr.com/en/docs/overview/features/","section":"docs","title":"Features"},{"body":"Configuration If set, jump over to the config.toml file and start configuring your site.\nThis section will mainly cover settings that are unique to this theme. If something is not covered here (or elsewhere in this file), there's a good chance it is covered in this Hugo docs page.\nGlobal Parameters These options set global values that some pages or all pages in the site use by default.\nParameter Value Type Overidable on Page author string no twitter string no largeTwitterCard boolean no ga_analytics string no description string yes introDescription string no numberOfTagsShown integer no fallBackOgImage file path (string) no codeMaxLines integer yes codeLineNumbers boolean yes mainSections array/string no centerLogo boolean no logo file path (string) no mobileNavigation string no figurePositionShow boolean yes figurePositionLabel string no customCSS array of file path (string) no customJS array of file path (string) no enforceLightMode boolean N/A enforceDarkMode boolean N/A titleSeparator string no comment boolean no Page Parameters These options can be set from a page frontmatter or via archetypes.\nParameter Value Type Overrides Global title string N/A date date N/A description string N/A draft boolean N/A featured boolean N/A tags array/string N/A categories array/string N/A toc boolean N/A thumbnail file path (string) N/A featureImage file path (string) N/A shareImage file path (string) N/A codeMaxLines integer yes codeLineNumbers boolean yes figurePositionShow boolean yes figurePositionLabel string no comment boolean no Modify links menu To add, remove, or reorganize top menu items, edit this YAML file. These menu items also display any categories (taxonomies) that might be configured for articles.\nSocial media To edit your social media profile links, edit this YAML file.\nIf you wish to globally use a large Twitter summary card when sharing posts, set the global parameter largeTwitterCard to true.\nSearch engine If using Google Analytics, configure the ga_analytics global parameter in your site with your ID.\nForcing light or dark mode By default, sites authored using Clarity will load in the browser with the user's system-wide settings. I.e., if the underlying OS is set to dark mode, the site will automatically load in dark mode. Regardless of the default mode, a UI control switch exists to override the theme mode at the user's discretion.\nIn order to override this behavior and force one mode or another, add either enforceLightMode or enforceDarkMode to your config.toml file. If neither value is present, add it.\nTo enforce Light Mode by default, turn enforceLightMode to true.\nTo enforce Dark Mode by default, turn enforceDarkMode to true\n1[params] 2... 3enforceLightMode = true # Force the site to always load in light mode. 4... Please note that you cannot enforce both modes at the same time. It wouldn't make sense, would it?\nPlease also note that the mode toggle UI will remain in place. That way, if a user prefers dark mode, they can have their way. The best of both worlds.\nI18N This theme supports Multilingual (i18n / internationalization / translations)\nThe exampleSite gives you some examples already. You may extend the multilingual functionality by following the official documentation.\nThings to consider in multilingual:\nsupported languages are configured in config/_default/languages.toml add new language support by creating a new file inside i18n directory. Check for missing translations using hugo server --i18n-warnings taxonomy names (tags, categories, etc...) are translated in i18n as well (translate the key) menus are translated manually in the config files config/_default/menus/menu.xx.toml menu's languages list are semi-hardcoded. You may chose another text for the menu entry with languageMenuName. Please, do better and create a PR for that. content must be translated individually. Read the official documentation for information on how to do it. Note: if you do NOT want any translations (thus removing the translations menu entry), then you must not have any translations. In the exampleSite that's as easy as removing the extra translations from the config/_default/... or executing this onliner:\n1sed \u0026#39;/^\\[pt]$/,$d\u0026#39; -i config/_default/languages.toml \u0026amp;\u0026amp; rm config/_default/menus/menu.pt.toml Comments Clarity supports Hugo built-in Disqus partial, you can enable Disqus simply by setting disqusShortname in your configuration file.\ndisqusShortname should be placed in root level of configuration.\nYou can also create a file named layouts/partials/comments.html for customizing the comments, checkout Comments Alternatives for details.\n","link":"https://omnigram.nexptr.com/en/docs/overview/customize/","section":"docs","title":"Customization"},{"body":"Images Image figure captions You have the option of adding captions to images in blog posts and automatically prepending a desired string such as \u0026quot;Figure N\u0026quot; to the alt text. This is controlled via two global settings.\nfigurePositionLabel is a string which will be prepended to any alt text of an article image. By default, this is set to \u0026quot;Figure.\u0026quot; And figurePositionShow controls, globally, whether to show this label. It does not affect whether to show the image alt text, only the prefix figure caption. For more granular control, figurePositionShow can be overridden at the article level if desired.\nThe number will be automatically calculated and assigned after the figurePositionLabel text starting from the top of the article and counting down. Featured images will be excluded from this figuration.\nImage figure captions example In this example, figurePositionLabel is set to \u0026quot;Figure\u0026quot; in config.toml and this is the first image in a given article.\n1![Antrea Kubernetes nodes prepared](./images/calrity/image-figure.png) Inline images To make a blog image inline, append :inline to its alt text. Typically, inline images will have no alt text associated with them.\nInline images example 1\u0026lt;!-- some image without alt text --\u0026gt; 2![:inline](someImageUrl) 3 4\u0026lt;!-- some image with alt text --\u0026gt; 5 6![some alt text:inline](someOtherImageUrl) Float images to the left To align a blog image to the left, append :left to its alt text. Article text will then flow to the right of the image.\nFloat images left example 1\u0026lt;!-- some image without alt text --\u0026gt; 2![:left](someImageUrl) 3 4\u0026lt;!-- some image with alt text --\u0026gt; 5 6![some alt text:left](someOtherImageUrl) Add classes to images To add a class image to the left, append ::\u0026lt;classname\u0026gt; to its alt text. You can also add multiple classes to an image separated by space. ::\u0026lt;classname1\u0026gt; \u0026lt;classname2\u0026gt;.\nImage class example 1\u0026lt;!-- some image without alt text --\u0026gt; 2![::img-medium](someImageUrl) 3 4\u0026lt;!-- some image with alt text --\u0026gt; 5 6![some alt text::img-large img-shadow](someOtherImageUrl) Article thumbnail image Blog articles can specify a thumbnail image which will be displayed to the left of the card on the home page. Thumbnails should be square (height:width ratio of 1:1) and a suggested dimension of 150 x 150 pixels. They will be specified using a frontmatter variable as follows:\n1... 2thumbnail: \u0026#34;images/2020-04/capv-overview/thumbnail.jpg\u0026#34; 3... The thumbnail image will take precedence on opengraph share tags if the shareImage parameter is not specified.\nArticle featured image Each article can specify an image that appears at the top of the content. When sharing the blog article on social media, if a thumnail is not specified, the featured image will be used as a fallback on opengraph share tags.\n1... 2featureImage: \u0026#34;images/2020-04/capv-overview/featured.jpg\u0026#34; 3... Share Image Sometimes, you want to explicitly set the image that will be used in the preview when you share an article on social media. You can do so in the front matter.\n1... 2shareImage = \u0026#34;images/theImageToBeUsedOnShare.png\u0026#34; 3... Note that if a share image is not specified, the order of precedence that will be used to determine which image applies is thumbnail =\u0026gt; featureImage =\u0026gt; fallbackOgImage. When sharing a link to the home page address of the site (as opposed to a specific article), the fallbackOgImage will be used.\nAlign logo You can left align or center your site's logo.\n1... 2centerLogo = true # Change to false to align left 3... If no logo is specified, the title of the site will appear in its place.\n","link":"https://omnigram.nexptr.com/en/docs/overview/images/","section":"docs","title":"Manipulating Images"},{"body":"Blog directory Edit the config.toml file and change the blogDir key. Value will be name of the folder where the blog articles reside.\n1[params] 2... 3blogDir = \u0026#34;blog\u0026#34; 4... For more info, see the Hugo docs.\nMobile menu positioning The navigation menu when mobile browsing can be configured in config.toml to open right or left depending on preference. The \u0026quot;hamburger\u0026quot; menu icon will always display in the upper right hand corner regardless.\n1[params] 2... 3mobileNavigation = \u0026#34;left\u0026#34; # Mobile nav menu will open to the left of the screen. 4... Tags and Taxonomies Show number of tags The number of tags and taxonomies (including categories) that should be shown can be configured so that any more than this value will only be accessible when clicking the All Tags button. This is to ensure a large number of tags or categories can be easily managed without consuming excess screen real estate. Edit the numberOfTagsShown parameter and set accordingly.\n1[params] 2... 3numberOfTagsShown = 14 # Applies for all other default \u0026amp; custom taxonomies. e.g categories, brands see https://gohugo.io/content-management/taxonomies#what-is-a-taxonomy 4... Number of tags example Table of contents Each article can optionally have a table of contents (TOC) generated for it based on top-level links. By configuring the toc parameter in the article frontmatter and setting it to true, a TOC will be generated only for that article. The TOC will then render under the featured image.\nTable of contents (TOC) example ","link":"https://omnigram.nexptr.com/en/docs/overview/blogging/","section":"docs","title":"Blogging"},{"body":"Code Display line numbers Choose whether to display line numbers within a code block globally with the parameter codeLineNumbers setting to true or false.\n1[params] 2... 3codeLineNumbers = true # Shows line numbers for all code blocks globally. 4... Limit code block height You can globally control the number of lines which are displayed by default for your code blocks. Code which has the number of lines exceed this value will dynamically cause two code block expansion buttons to appear, allowing the user to expand to full length and contract. This is useful when sharing code or scripts with tens or hundreds of lines where you wish to control how many are displayed. Under params in config.toml file, add a value as follows:\n1[params] 2... 3codeMaxLines = 10 # Maximum number of lines to be shown by default across all articles. 4... If the value already exists, change it to the desired number. This will apply globally.\nIf you need more granular control, this parameter can be overridden at the blog article level. Add the same value to your article frontmatter as follows:\n1... 2codeMaxLines = 15 # Maximum number of lines to be shown in code blocks in this blog post. 3... If codeMaxLines is specified both in config.toml and in the article frontmatter, the value specified in the article frontmatter will apply to the given article. In the above example, the global default is 10 and yet the article value is 15 so code blocks in this article will auto-collapse after 15 lines.\nIf codeMaxLines is not specified anywhere, an internal default value of 100 will be assumed.\n","link":"https://omnigram.nexptr.com/en/docs/overview/syntax-highlighting/","section":"docs","title":"Syntax Highlighting"},{"body":"Custom CSS and JS To minimize HTTP requests per page, we would recommend loading CSS styles and JavaScript helpers in single bundles. That is to say, one CSS file and one JavaScript file. Using Hugo minify functions, these files will be minified to optimize the size.\nGoing by the above 👆🏻 reason, we recommend adding custom CSS and JS via the custom SASS file (Compose, Clarity) and the custom JS file (Compose, Clarity).\nHowever, sometimes you may need to load additional style or script files. In such cases, you can add custom .css and .js files by listing them in the config.toml file (see the snippet below). Similar to images, these paths should be relative to the static directory.\n1[params] 2... 3customCSS = [\u0026#34;css/custom.css\u0026#34;] # Include custom CSS files 4customJS = [\u0026#34;js/custom.js\u0026#34;] # Include custom JS files 5... Pro Tip: You can change the theme colors via the this variable's SASS file\nHooks Clarity provides some hooks for adding code on page.\nIf you need to add some code(CSS import, HTML meta or similar) to the head section on every page, add a partial to your project:\nlayouts/partials/hooks/head-end.html Similar, if you want to add some code right before the body end, create your own version of the following file:\nlayouts/partials/hooks/body-end.html ","link":"https://omnigram.nexptr.com/en/docs/overview/theme-overrides/","section":"docs","title":"Theme Overrides"},{"body":"Hugo Clarity is a technology-minded theme for Hugo based on VMware's open-source Clarity Design System featuring rich code support, dark/light mode, mobile support, and much more. See a live demo at neonmirrors.net.\nGet started with Clarity ","link":"https://omnigram.nexptr.com/en/docs/install/","section":"docs","title":"Install"},{"body":"Hugo Clarity is a technology-minded theme for Hugo based on VMware's open-source Clarity Design System featuring rich code support, dark/light mode, mobile support, and much more. See a live demo at neonmirrors.net.\nGet started with Clarity ","link":"https://omnigram.nexptr.com/en/docs/features/","section":"docs","title":"Features"},{"body":"Welcome to the Compose theme user guide! This guide shows you how to get started creating technical documentation sites using Compose, including site customization and how to use Compose's blocks and templates.\nGet started now ","link":"https://omnigram.nexptr.com/en/docs/administration/","section":"docs","title":"Administration"},{"body":"Hugo Clarity is a technology-minded theme for Hugo based on VMware's open-source Clarity Design System featuring rich code support, dark/light mode, mobile support, and much more. See a live demo at neonmirrors.net.\nGet started with Clarity ","link":"https://omnigram.nexptr.com/en/docs/developer/","section":"docs","title":"Develpoer"},{"body":"Hugo Clarity is a technology-minded theme for Hugo based on VMware's open-source Clarity Design System featuring rich code support, dark/light mode, mobile support, and much more. See a live demo at neonmirrors.net.\nGet started with Clarity ","link":"https://omnigram.nexptr.com/en/docs/guides/","section":"docs","title":"Guides"},{"body":"Hugo Clarity is a technology-minded theme for Hugo based on VMware's open-source Clarity Design System featuring rich code support, dark/light mode, mobile support, and much more. See a live demo at neonmirrors.net.\nGet started with Clarity ","link":"https://omnigram.nexptr.com/en/docs/faq/","section":"docs","title":"FAQ"},{"body":"Privacy Policy\nSven Liu built the Omnigram app as an Open Source app. This SERVICE is provided by Sven Liu at no cost and is intended for use as is.\nThis page is used to inform visitors regarding my policies with the collection, use, and disclosure of Personal Information if anyone decided to use my Service.\nIf you choose to use my Service, then you agree to the collection and use of information in relation to this policy. The Personal Information that I collect is used for providing and improving the Service. I will not use or share your information with anyone except as described in this Privacy Policy.\nThe terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, which are accessible at Omnigram unless otherwise defined in this Privacy Policy.\nInformation Collection and Use\nFor a better experience, while using our Service, I may require you to provide us with certain personally identifiable information. The information that I request will be retained on your device and is not collected by me in any way.\nThe app does use third-party services that may collect information used to identify you.\nLink to the privacy policy of third-party service providers used by the app\nGoogle Play Services Log Data\nI want to inform you that whenever you use my Service, in a case of an error in the app I collect data and information (through third-party products) on your phone called Log Data. This Log Data may include information such as your device Internet Protocol (“IP”) address, device name, operating system version, the configuration of the app when utilizing my Service, the time and date of your use of the Service, and other statistics.\nCookies\nCookies are files with a small amount of data that are commonly used as anonymous unique identifiers. These are sent to your browser from the websites that you visit and are stored on your device's internal memory.\nThis Service does not use these “cookies” explicitly. However, the app may use third-party code and libraries that use “cookies” to collect information and improve their services. You have the option to either accept or refuse these cookies and know when a cookie is being sent to your device. If you choose to refuse our cookies, you may not be able to use some portions of this Service.\nService Providers\nI may employ third-party companies and individuals due to the following reasons:\nTo facilitate our Service; To provide the Service on our behalf; To perform Service-related services; or To assist us in analyzing how our Service is used. I want to inform users of this Service that these third parties have access to their Personal Information. The reason is to perform the tasks assigned to them on our behalf. However, they are obligated not to disclose or use the information for any other purpose.\nSecurity\nI value your trust in providing us your Personal Information, thus we are striving to use commercially acceptable means of protecting it. But remember that no method of transmission over the internet, or method of electronic storage is 100% secure and reliable, and I cannot guarantee its absolute security.\nLinks to Other Sites\nThis Service may contain links to other sites. If you click on a third-party link, you will be directed to that site. Note that these external sites are not operated by me. Therefore, I strongly advise you to review the Privacy Policy of these websites. I have no control over and assume no responsibility for the content, privacy policies, or practices of any third-party sites or services.\nChildren’s Privacy\nThese Services do not address anyone under the age of 13. I do not knowingly collect personally identifiable information from children under 13 years of age. In the case I discover that a child under 13 has provided me with personal information, I immediately delete this from our servers. If you are a parent or guardian and you are aware that your child has provided us with personal information, please contact me so that I will be able to do the necessary actions.\nChanges to This Privacy Policy\nI may update our Privacy Policy from time to time. Thus, you are advised to review this page periodically for any changes. I will notify you of any changes by posting the new Privacy Policy on this page.\nThis policy is effective as of 2023-12-21\nContact Us\nIf you have any questions or suggestions about my Privacy Policy, do not hesitate to contact me at omnigram@nexptr.com.\nThis privacy policy page was created at privacypolicytemplate.net and modified/generated by App Privacy Policy Generator\n","link":"https://omnigram.nexptr.com/en/privacy_policy/","section":"","title":"Privacy Policy"},{"body":"Terms \u0026amp; Conditions\nBy downloading or using the app, these terms will automatically apply to you – you should make sure therefore that you read them carefully before using the app. You’re not allowed to copy or modify the app, any part of the app, or our trademarks in any way. You’re not allowed to attempt to extract the source code of the app, and you also shouldn’t try to translate the app into other languages or make derivative versions. The app itself, and all the trademarks, copyright, database rights, and other intellectual property rights related to it, still belong to Sven Liu.\nSven Liu is committed to ensuring that the app is as useful and efficient as possible. For that reason, we reserve the right to make changes to the app or to charge for its services, at any time and for any reason. We will never charge you for the app or its services without making it very clear to you exactly what you’re paying for.\nThe Omnigram app stores and processes personal data that you have provided to us, to provide my Service. It’s your responsibility to keep your phone and access to the app secure. We therefore recommend that you do not jailbreak or root your phone, which is the process of removing software restrictions and limitations imposed by the official operating system of your device. It could make your phone vulnerable to malware/viruses/malicious programs, compromise your phone’s security features and it could mean that the Omnigram app won’t work properly or at all.\nThe app does use third-party services that declare their Terms and Conditions.\nLink to Terms and Conditions of third-party service providers used by the app\nGoogle Play Services You should be aware that there are certain things that Sven Liu will not take responsibility for. Certain functions of the app will require the app to have an active internet connection. The connection can be Wi-Fi or provided by your mobile network provider, but Sven Liu cannot take responsibility for the app not working at full functionality if you don’t have access to Wi-Fi, and you don’t have any of your data allowance left.\nIf you’re using the app outside of an area with Wi-Fi, you should remember that the terms of the agreement with your mobile network provider will still apply. As a result, you may be charged by your mobile provider for the cost of data for the duration of the connection while accessing the app, or other third-party charges. In using the app, you’re accepting responsibility for any such charges, including roaming data charges if you use the app outside of your home territory (i.e. region or country) without turning off data roaming. If you are not the bill payer for the device on which you’re using the app, please be aware that we assume that you have received permission from the bill payer for using the app.\nAlong the same lines, Sven Liu cannot always take responsibility for the way you use the app i.e. You need to make sure that your device stays charged – if it runs out of battery and you can’t turn it on to avail the Service, Sven Liu cannot accept responsibility.\nWith respect to Sven Liu’s responsibility for your use of the app, when you’re using the app, it’s important to bear in mind that although we endeavor to ensure that it is updated and correct at all times, we do rely on third parties to provide information to us so that we can make it available to you. Sven Liu accepts no liability for any loss, direct or indirect, you experience as a result of relying wholly on this functionality of the app.\nAt some point, we may wish to update the app. The app is currently available on Android \u0026amp; iOS – the requirements for the both systems(and for any additional systems we decide to extend the availability of the app to) may change, and you’ll need to download the updates if you want to keep using the app. Sven Liu does not promise that it will always update the app so that it is relevant to you and/or works with the Android \u0026amp; iOS version that you have installed on your device. However, you promise to always accept updates to the application when offered to you, We may also wish to stop providing the app, and may terminate use of it at any time without giving notice of termination to you. Unless we tell you otherwise, upon any termination, (a) the rights and licenses granted to you in these terms will end; (b) you must stop using the app, and (if needed) delete it from your device.\nChanges to This Terms and Conditions\nI may update our Terms and Conditions from time to time. Thus, you are advised to review this page periodically for any changes. I will notify you of any changes by posting the new Terms and Conditions on this page.\nThese terms and conditions are effective as of 2023-12-21\nContact Us\nIf you have any questions or suggestions about my Terms and Conditions, do not hesitate to contact me at omnigram@nexptr.com.\nThis Terms and Conditions page was generated by App Privacy Policy Generator\n","link":"https://omnigram.nexptr.com/en/terms_conditions/","section":"","title":""},{"body":"","link":"https://omnigram.nexptr.com/en/blog/","section":"blog","title":"Blog"},{"body":"","link":"https://omnigram.nexptr.com/en/categories/","section":"categories","title":"Categories"},{"body":"","link":"https://omnigram.nexptr.com/en/docs/","section":"docs","title":"Docs"},{"body":" Compose your Docs with Ease. Compose is a lean Hugo documentation theme, inspired by forestry.io.\nFeel free to open a PR, raise an issue(s) or request new feature(s). You can generate diagrams, flowcharts, and piecharts from text in a similar manner as markdown using mermaid.\nOr, generate graphs, charts and tables from a csv, or a json file.\nRead the Docs Download Theme\n","link":"https://omnigram.nexptr.com/en/","section":"","title":"Omnigram"},{"body":"","link":"https://omnigram.nexptr.com/en/tags/","section":"tags","title":"Tags"}]